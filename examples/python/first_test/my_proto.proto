
syntax = "proto3";

// Interface exported by the server
service RouteGuide{
  rpc GetCurrentWeather(EmptyMessage) returns (Weather) {}

  // Simple RPC - client sends one message to service and waits for response
  rpc GetAvgDayWeather(Date) returns (Weather) {};

  // Response-Streaming RPC
  // Client sends one RPC to server and server returns stream sequence of messages back
  // returns stream must be defined
  rpc GetDayWeather(Date) returns (stream Weather) {};

  // Request-Streaming RPC
  // Client writes a sequence of messages and sends them to server with provided stream
  // Once client send all request it waits for server to write back
  rpc RecordWeather(stream Weather) returns (SummaryMessage) {};

  // bidirectionally-streaming RPC
  // both sides send a sequence of messages using read-write stream
  // both streams operate independently
  // order of messages in each stream is preserved
  rpc RouteWeatherChat(stream RouteNote) returns (stream RouteNote){}
}
